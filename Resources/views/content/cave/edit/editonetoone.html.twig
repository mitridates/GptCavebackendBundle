{#
/**
 * Edit Cave onetoone form
 * @file onetoone.html.twig
 * @string formname Form name
 * @param array arrayParams
 * @param FormView form
 * @param Cave cave
 * @param string delete_token THIS form delete token
 */
#}
{% form_theme form '@GptCavebackend/symfony/fields.html.twig' %}
{{ form_start(form) }}
<div class="errors"></div>
    {% include '@GptCavebackend/partial/form/nav_edit_delete_button.html.twig' %}
    {% include '@GptCavebackend/content/cave/forms/'~formname~'/'~formname~'.html.twig'%}
    {% include '@GptCavebackend/partial/form/nav_edit_submit_button.html.twig' %}
{{ form_end(form) }}
<script type="text/javascript">
    $(document).ready(function() {
        let formMain =    document.getElementById('{{ form.vars.attr.id }}');
        let submitBttn = formMain.querySelector('button[type=submit]');
        let deleteBttn = formMain.querySelector('.delete');
        let submitUrl =  '{{ path('cave_backend_cave_save_onetoone', {id: cave.getCaveid(), name: formname}) }}';
        let errors =  formMain.querySelector('.errors');

        let submitFn =  function () {
            errors.innerHTML='';
            Grot(formMain).form('submit', submitUrl, {callback: function (data) {
                    if(data.length!==0) errors.innerHTML= data;
                }});
            return false;
        };
        formMain.onsubmit = function () {
            return false;
        };

        deleteBttn.addEventListener('click', function () {
            let icon = this.querySelector('.fa');
            let text = this.querySelector('.delete-text');
            if(icon.classList.contains('fa-trash')){
                icon.classList.replace('fa-trash', 'fa-exclamation-triangle');
                text.innerHTML = '{{'delete.confirm.this.form'|trans({}, 'cavemessages')|raw}}';
                setTimeout(function(){
                    icon.classList.replace('fa-exclamation-triangle','fa-trash');
                    text.innerHTML = '{{'delete'|trans({}, 'cavemessages')|raw}}';
                }, 3000);
                return;
            }
                let xhr = new XMLHttpRequest(), formdata = new FormData();
                xhr.open('POST', '{{path('cave_backend_cave_delete_onetoone', { "id": cave.getCaveid(), 'name': formname})}}', true);
                formdata.append('delete_token', '{{delete_token}}');
                xhr.onload = function () {
                    if(this.responseText!==''){
                        alert(this.responseText);
                        return;
                    }else{
                        menuloader.load( document.querySelector('a[href="#karst-{{ formname }}"]') , true)
                    }
                };
                xhr.setRequestHeader('X-Requested-With','XMLHttpRequest');
                xhr.send(formdata);
                return false;
            });


        submitBttn.addEventListener('click', function () {submitFn(); return false;});
    });
</script>